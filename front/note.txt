Как адаптировать сайт для мобильных: методы и примеры
https://practicum.yandex.ru/blog/kak-adaptirovat-sayt-pod-mobilnye-ustroystva/

Этап 1: Мобильные версии сайтов
Этап 2. Резиновая» вёрстка - ширина всех элементов менялась при изменении ширины страницы
Этап 3. Адаптивная вёрстка - После "резиновой" вёрстки появилась адаптивная. Суть в том, чтобы не сжимать сайт под размеры экрана, а создать для каждого экрана отдельный макет. (как узнать устройство?)

В адаптивной вёрстке выделяют следующие принципы:
1. Контент десктопной и мобильной версии сайта дублируется.
2. Дизайн не меняется. Шрифты, цвета, логотипы должны быть одинаковыми в десктопной и мобильной версиях.
3. Сохраняется иерархия элементов. Иерархия заголовков, подзаголовков, текстовых блоков, иллюстраций и кнопок
4. Высота и ширина кликабельных элементов — не менее 44 пикселей (Область нажатия — 44–48 пикселей.)
5. Число колонок уменьшается. При вёрстке десктопных сайтов обычно используют сетку из 12 колонок. Для узкого мобильного экрана столько колонок не нужно, обычно хватает одной, максимум четырёх. Для экрана планшета подойдёт сетка из шести или восьми колонок.

Компактность — это вертикальное расположение в мобильной версии карточек и других элементов, которые на десктопной идут в ряд. Это обосновано тем, что на компьютере просматривают контент слева направо, а на телефоне — сверху вниз.

Основных разрешений для адаптивной вёрстки три:
1600 пикселей — для компьютеров;
960 пикселей — для планшетов;
375 пикселей — для телефонов.
(ещё эти значения называют брейкпоинтами)
В Bootstrap представлено шесть брейкпоинтов: 1920, 1200, 992, 768, 576 и 376 пикселей.

Основной инструмент — это графический редактор Figma.

------------------
https://tproger.ru/translations/responsive-web-design-tips
как можно использовать CSS3-медиазапросы для создания адаптивного дизайна. min-width задает минимальную ширину окна браузера или экрана, к которой будут применены определенные стили. Если какое-нибудь значение будет ниже min-width, то стили будут проигнорированы. max-width делает противоположно. Пример:

@media screen and (min-width: 600px) {
  .hereIsMyClass {
    width: 30%;
    float: right;
  }
}
------------------
media запросы
https://itchief.ru/html-and-css/media-queries

Например, следующий @media будет применяться только при выполнении всех трёх условий (это экран, width >= 1200px и ориентация landscape):
@media screen and (min-width: 1200px) and (orientation: landscape) { ... }

Например, установим другой размер шрифта для устройств с плотностью пикселей на дюйм более 150:
/* Default */
p {
  font-size: 16px;
}

/* Minimum resolution */
@media (min-resolution: 150dpi) {
  p {
    font-size: 14px;
  }
}

------------------
Медиа-запросы в <link> и @import
При подключении таблицы стилей можно с помощью атрибута media установить медиа-запросы и тем самым определить условия, когда они должны использоваться.

<link rel="stylesheet" media="screen and (max-width: 991.98px)" href="/assets/mobile.css">
<link rel="stylesheet" media="screen and (min-width: 992px)" href="/assets/desktop.css">

Кроме <link>, их также можно использовать @import:
@import url(mobile.css) screen and (max-width: 991.98px);
@import url(desktop.css) screen and (min-width: 992px);
