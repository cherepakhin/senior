"Единственная постоянная вещь в жизни — это перемены" (Гераклит).

Стили, примененные через селектор по ID, имеют более высокий приоритет, чем стили,
примененные через КЛАССЫ и теги, что облегчает переопределение стилей.

<td wicket:id="publishDate" class="myPublishDate">aaa</td>

Конфликт стилей

https://developer.mozilla.org/ru/docs/Learn_web_development/Core/Styling_basics/Handling_conflicts

Селектор элементов ( например h1 ) менее специфичен — он выберет все элементы этого типа на странице — поэтому получит меньше баллов.
Селектор класса более специфичен — он выберет только те элементы на странице, которые имеют конкретное значение атрибута class — поэтому получит больше баллов, селектор класса применится после селектора элемента и поэтому перекроет его стили.

===============================
Пример ОЧЕРЕДНОСТИ:
h1 {
  color: red;
}
h1 {
  color: blue;
}

<h1>This is my heading.</h1> - текст будет СИНИМ, т.к. объявлен позже
===============================
===============================
Пример класса и тега:

````css
.main-heading {
  color: red;
}

h1 {
  color: blue;
}
````

<h1 class="main-heading">This is my heading.</h1>
текст будет КРАСНЫМ.

т.к. селектор КЛАССА ".main-heading  {...}" имеет более ВЫСОКИЙ приоритет
по сравнению с селектор ТЕГА "h1 {...}" , несмотря на то что селектор ТЕГА h1 объявлен позже
селектора КЛАССА ".main-heading"

<h1 class="main-heading">This is my heading.</h1> - сначала применится h1 {} и переопределится class-ом (.main-heading {}).
-------------------------

Селектор КЛАССА (.main-heading) более высокий приоритет, чем селектор ТЕГА — он выберет только те элементы на странице, которые имеют конкретное значение атрибута class — поэтому получит больше баллов.
Селектор КЛАССА (.main-heading) применится после селектора ТЕГА (h1) и поэтому перекроет его стили.
===============================

===============================
при одинаковых селекторах КЛАССА, будет применен последний. Пример:

````css
h1 {
  color: blue;
}

h1 {
  color: red;
}
````

<h1 class="main-heading">This is my heading.</h1>
текст будет КРАСНЫМ.
===============================
Можно потренироваться в интерактивном редакторе (раздел "Interactive editor"):
https://developer.mozilla.org/ru/docs/Learn_web_development/Core/Styling_basics/Handling_conflicts
===============================
Итого такой приоритет:

В <td id="publishDate" class="myPublishDate">aaa</td>

ID(id="publishDate") выше чем CLASS(class="myPublishDate")
CLASS(class) выше чем ТЕГ (td):

ID (#my в css, id в html ) -> CLASS (. в css, style в html) -> ТЕГ (h1 в css, h1 в html)

body {
  color: green;
}

.my-class-1 a {
  color: red;
}

.my-class-2 a {
  color: initial;
}

.my-class-3 a {
  color: unset;
}

#my {
  color: yellow;
}

<ul>
  <li>Default <a href="#">link</a> color</li>
  <li id="my" class="my-class-1">Inherit the <a href="#">link</a> color</li>
  <li class="my-class-2">Reset the <a href="#">link</a> color</li>
  <li class="my-class-3">Unset the <a href="#">link</a> color</li>
</ul>

См. new_site/css/hierarchy_css.png

=====================================
Основы
https://sky.pro/wiki/html/osnovy-css-dlya-stilizacii-html/

Селектор по тегу (p, h1, ....)
---------------------------
<p>Текст с классом</p>

p {
    color: blue;
}

Селектор по классу (.)
---------------------------
<p class="highlight">Текст с классом</p>

.highlight {
    color: red;
}

Селектор по идентификатору (#)
---------------------------
(должен быть уникальным на странице. один и тот же id не может быть присвоен нескольким элементам)

<p id="unique">Уникальный текст</p>

#unique {
    color: green;
}

Комбинированные селекторы
---------------------------
p.highlight {
    font-weight: bold;
}

<p class="highlight">Сработает только для тега p с классом .highlight</p>


hover
---------------------------
.styled-button:hover {
    background-color: #45a049;
}


Пример
-------------------
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Стилизация кнопки</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <button class="styled-button">Нажми меня</button>
</body>
</html>

.styled-button {
    background-color: #4CAF50;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
}

/* Это комментарий. При наведении мышки. */
.styled-button:hover {
    background-color: #45a049;
}

==================================================
https://purpleschool.ru/knowledge-base/article/specificity

Как рассчитывается специфичность?
Специфичность определяется на основе четырёх компонентов: селекторов тегов (p, h1, ...), классов (.), идентификаторов(#) и встроенных стилей. Каждому из этих компонентов присваивается определённое количество баллов, которые затем суммируются для определения общей специфичности.

Правила подсчёта специфичности:
Встроенные стили (например, style="...") — 1000 баллов за каждый.
Селекторы идентификаторов (например, #id) — 100 баллов. (# должен быть уникальным на странице)
Селекторы классов, атрибутов и псевдоклассы (например, .class, [type="text"], :hover) — 10 баллов ЗА КАЖДЫЙ.
Селекторы тегов и псевдоэлементы (например, div, p, ::before) — 1 балл за каждый.

Пример подсчёта специфичности:
div — 1 балл (один селектор тега)
.class — 10 баллов (один селектор класса)
#id — 100 баллов (один селектор идентификатора) (id д.б. уникальным)
div.class — 11 баллов (один селектор тега и один селектор класса)
#id.class — 110 баллов (один селектор идентификатора и один селектор класса)
style="color: red;" — 1000 баллов (встроенный стиль)


<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    div {
      color: blue; // 1 балл
    }
    .example {
      color: green; // 10 баллов
    }
    #unique {
      color: red; // 100 баллов
    }
  </style>
  <title>Специфичность</title>
</head>
<body>
  <div id="unique" class="example">Текст</div>
</body>
</html>

В этом примере к элементу <div> применяются три правила:

div { color: blue; } — специфичность 1 (1 , т.к. "div" это тег )
.example { color: green; } — специфичность 10 (10 т.к. "." это class)
#unique { color: red; } — специфичность 100 (100 . т.к. "#" это id)

Текст будет КРАСНЫЙ.
==================================================
Расчет веса стилей.
Селектор    	            Вес
---------------------------------------------------------------
div#some	                1.0.1 = #some(=100) + div(=1) = 101
#some	                    1.0.0 = #some(=100)
* .list a	                0.1.1 = class .list(=10) + tag(=1)
.class	                    0.1.0 = class (=10)
section h1	                0.0.2 = tag(=1) + tag(=1)
section	                    0.0.1 = tag(=1)
==================================================
Если два правила имеют одинаковую специфичность,
то ПРИМЕНЯЕТСЯ ПОСЛЕДНЕЕ из них в порядке определения.
==================================================
Вложенные селекторы

body div p {
  color: blue;
}

Этот селектор имеет специфичность 3 (один тег body, один тег div и один тег p).
==================================================
Свойство !important позволяет принудительно применить стиль, игнорируя специфичность.
p {
  color: blue !important;
}

p {
  color: green;
}
Несмотря на то, что второе правило определено позже, текст будет синим из-за !important.
==================================================
атрибут style самый специфичный, у него самый большой вес и перебивают свойства в CSS файлах
==================================================
!important - самый специфичный. ПЕРЕЧЕРКИВАЕТ CSS из файлов.
==================================================
<div class="tomato plum"></div>

Если написать классы в порядке сначала .tomato, а потом .plum, то текст будет сливовый (plum):
.tomato {
  color: tomato;
}
.plum {
  color: plum;
}

НО!!!! Если поменять классы в CSS местами, то победит последний, и текст станет томатным:

.plum {
  color: plum;
}

.tomato {
  color: tomato;
}
====================================

